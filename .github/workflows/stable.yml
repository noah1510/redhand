name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  doxygen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: sudo apt install doxygen graphviz
    - name: generate docs
      run: doxygen
    - name: Deploy
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: doc/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pre-release:
    name: "windows latest release"
    runs-on: "windows-latest"
    steps:
    - uses: actions/checkout@v2
      with: 
        lfs: false
    - uses: msys2/setup-msys2@v1
      with:
        update: true
    - name: install dependencies
      shell: msys2 {0}
      run:  bash scripts/dependencies.sh --ci
    - name: setup the project
      shell: msys2 {0}
      run:  bash scripts/setup.sh --ci
    - name: build library
      shell: msys2 {0}
      run:  bash scripts/build.sh -j 2 -o $GITHUB_SHA
    - name: compress header files
      run: 7z a -r deploy/headers.zip include/redhand/**
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        title: "tagged release"
        files: |
          deploy/libredhand.dll
          deploy/headers.zip
  setup:
    needs: pre-release
    name: build and publish deb
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with: 
        lfs: false
    - name: add required ppa
      run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo add-apt-repository -y ppa:savoury1/build-tools && sudo add-apt-repository -y ppa:savoury1/backports && sudo apt update
    - name: install dependencies
      run:  bash scripts/dependencies.sh --ci
    - name: setup the project
      run:  bash scripts/setup.sh --ci
    - name: install additional dependencies
      run: sudo apt install gpg debhelper dput openssl libdistro-info-perl dh-make graphviz
    - name: configure gpg key and environment
      run: |
        echo "${{ secrets.GPG_SECRET_KEY }}" | openssl enc -base64 -d | gpg --import 
        echo "DEBUILD_DPKG_BUILDPACKAGE_OPTS=\"-k0xA82A68B9A35079F860E1C6ADB5B78B08943AE8A6\"" > ~/.devscripts 
        echo "export DEBFULLNAME=\"Github actions bot\" \n export DEBEMAIL=\"noasakurajin@web.de\"" > ~/.bashrc 

    - name: update bionic release version
      run: |
        MESSAGE="automatic bionic build"
        dch --distribution bionic -l+git$(date +%Y.%m%d.%H%M%S)~b $MESSAGE
    - name: build bionic package
      run: debuild -S -sa
    - name: publish bionic package
      run: dput ppa:noasakurajin/libredhand ../*b1_source.changes
    - name: reset changelog
      run: git checkout -- debian/changelog

    - name: update focal release version
      run: |
        MESSAGE="automatic focal build"
        dch --distribution focal -l+git$(date +%Y.%m%d.%H%M%S)~f $MESSAGE
    - name: build focal package
      run: debuild -S -sa
    - name: publish focal package
      run: dput ppa:noasakurajin/libredhand ../*f1_source.changes
    - name: reset changelog
      run: git checkout -- debian/changelog

    - name: update groovy release version
      run: |
        MESSAGE="automatic groovy build"
        dch --distribution groovy -l+git$(date +%Y.%m%d.%H%M%S)~g $MESSAGE
    - name: build groovy package
      run: debuild -S -sa
    - name: publish groovy package
      run: dput ppa:noasakurajin/libredhand ../*g1_source.changes
    - name: reset changelog
      run: git checkout -- debian/changelog
